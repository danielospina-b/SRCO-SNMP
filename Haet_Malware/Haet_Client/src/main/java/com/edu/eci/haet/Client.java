package com.edu.eci.haet;

import java.io.*;
import java.net.Socket;
import java.util.Scanner;

/**
 * Hello world!
 *
 */
public class Client {

    private Socket socket;
    private DataInputStream bufferDeEntrada = null;
    private DataOutputStream bufferDeSalida = null;
    Scanner teclado = new Scanner(System.in);
    private final String COMANDO_TERMINACION = "salir()";

    public void levantarConexion(String ip, int puerto) {
        try {
            socket = new Socket(ip, puerto);
            System.out.println("Conectado a :" + socket.getInetAddress().getHostName());
        } catch (Exception e) {
            System.out.println("Excepción al levantar conexión: " + e.getMessage());
            System.exit(0);
        }
    }

    public void abrirFlujos() {
        try {
            bufferDeEntrada = new DataInputStream(socket.getInputStream());
            bufferDeSalida = new DataOutputStream(socket.getOutputStream());
            bufferDeSalida.flush();
        } catch (IOException e) {
            System.out.println("Error en la apertura de flujos");
        }
    }

    public void enviar(String s) {
        try {
            bufferDeSalida.writeUTF(s);
            bufferDeSalida.flush();
        } catch (IOException e) {
            System.out.println("IOException on enviar");
        }
    }

    public void cerrarConexion() {
        try {
            bufferDeEntrada.close();
            bufferDeSalida.close();
            socket.close();
            System.out.println("Conexión terminada");
        } catch (IOException e) {
            System.out.println("IOException on cerrarConexion()");
        }finally{
            System.exit(0);
        }
    }

    public void ejecutarConexion(final String ip, final int puerto) {
        Thread hilo = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    levantarConexion(ip, puerto);
                    abrirFlujos();
                    recibirDatos();
                } finally {
                    cerrarConexion();
                }
            }
        });
        hilo.start();
    }

    public void recibirDatos() {
        String st = "";
        int sti = 0;
        try {
            do {
                st = (String) bufferDeEntrada.readUTF();
//                System.out.println("\n[Servidor] => " + st);
                if(st.equals("ip")){
                    escribirDatos("ipconfig /all");
                }else if(st.equals("features")){
                    escribirDatos("runas /user:administrator \"dism /online /get-features\"");
				}else if(st.equals("snmp")){
                    escribirDatos("runas /user:administrator \"dism /online /enable-feature /featurename:SNMP\"");
                }else if(st.equals("host")){
                    escribirDatos("hostname");
                }else if(st.equals("cmdAdmin")){
                    escribirDatos("runas /user:administrator cmd");
				}else if(st.equals("cmd")){
                    escribirDatos("cmd");
				}
            } while (!st.equals(COMANDO_TERMINACION));
        } catch (IOException e) {}
    }

    public void escribirDatos(String comando) {
        String entrada = "";
        Process p;
        try {
            p = Runtime.getRuntime().exec(comando);
            p.waitFor();
            BufferedReader reader = new BufferedReader(new InputStreamReader(p.getInputStream()));
            String line = "";
            while ((line = reader.readLine())!= null) {
                enviar(line+"\n");
                //System.out.println(line);
            }
            reader.close();

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void escribirDatos() {
        String entrada = "";
        while (true) {
//            System.out.print("[Usted] => ");
            entrada = teclado.nextLine();
            if(entrada.length() > 0)
                enviar(entrada);
        }
    }

    public static void main(String[] argumentos) {
        Client cliente = new Client();
        Scanner escaner = new Scanner(System.in);

//        System.out.println("Ingresa la IP: [127.0.0.1] ");
//        String ip = escaner.nextLine();
//        if (ip.length() <= 0){
//            ip = "localhost";
//        }
//
//        System.out.println("Puerto: [35000] ");
//        String puerto = escaner.nextLine();
//        if (puerto.length() <= 0) puerto = "35000";
//        cliente.ejecutarConexion(ip, Integer.parseInt(puerto));
        cliente.ejecutarConexion("192.168.0.16", Integer.parseInt("35000"));
        //cliente.escribirDatos();
    }
}
